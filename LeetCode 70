class Solution:
    def iterative_fibonacci(self, n):
        
        steps = [1,1]
        if n>=2:
            for i in range(2,n+1):
                steps.append(steps[i-1] + steps[i-2])
        return steps[-1]
    
    def another_iterative_fibonacci(self, n):
        if n < 3:
            return n

        a, b, result = 1, 2, 0

        for i in range(3, n+1):
            result = a + b
            a, b = b, result

        return result
    
    def climbStairs_recursive(self, n):
        if n == 1:
            return 1
        if n == 2:
            return 2
        return self.climbStairs(n-1)+self.climbStairs(n-2) 

    def climbStairs(self, n):
        
        lst = [1, 1]
        
        if n >= 2:
            for i in range(2, n + 1):
                lst.append(lst[i - 1] + lst[i - 2])
        return lst[-1]
        
